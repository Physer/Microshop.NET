name: Continuous Integration (Template)

on:
  workflow_call:
    inputs:
      service-directory:
        required: true
        type: string
      docker-image-name:
        required: true
        type: string
      service-name:
        required: true
        type: string
      service-dll:
        required: true
        type: string
    secrets:
      dockerUsername:
        required: true
      dockerPassword:
        required: true

jobs:
  continuous_integration:
    name: Build and test solution
    defaults:
      run:
        working-directory: ${{ inputs.service-directory }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ["3.1.x", "6.0.x", "7.0.x"]

    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

  publish_to_registry:
    name: Publish Docker image
    runs-on: ubuntu-latest
    needs: continuous_integration
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.dockerUsername }}
          password: ${{ secrets.dockerPassword }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: physer/${{ inputs.docker-image-name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./infrastructure/Dockerfile.backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SERVICE_NAME=${{ inputs.service-name }}
            SERVICE_DLL=${{ inputs.service-dll }}

  provision_resources:
    name: Provision resources
    uses: Physer/Microshop.NET/.github/workflows/provisioning.yaml@main
