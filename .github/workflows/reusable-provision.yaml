name: "[Reusable] Provision infrastructure"
concurrency: ci-${{ inputs.service-name }}

on:
  workflow_call:
    inputs:
      service-name:
        required: true
        type: string
      infrastructure-path:
        required: true
        type: string
      environment:
        required: true
        type: string
      application-names:
        type: string
        default: ""
      supertokens-core-docker-image-version:
        type: string
      postgres-docker-image-version:
        type: string
      rabbitmq-docker-image-version:
        type: string
      meilisearch-docker-image-version:
        type: string

jobs:
  deploy_terraform_resources:
    name: Deploy resources to Azure using Terraform
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_environment: ${{ inputs.environment }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      TF_VAR_application_names: ${{ inputs.application-names }}
      TF_VAR_supertokens_core_docker_image_version: ${{ inputs.supertokens-core-docker-image-version }}
      TF_VAR_postgres_docker_image_version: ${{ inputs.postgres-docker-image-version }}
      TF_VAR_rabbitmq_docker_image_version: ${{ inputs.rabbitmq-docker-image-version }}
      TF_VAR_meilisearch_docker_image_version: ${{ inputs.meilisearch-docker-image-version }}
    defaults:
      run:
        working-directory: infrastructure/terraform/${{ inputs.infrastructure-path }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init -backend-config="config.azure.tfbackend"

      - name: Plan Terraform
        run: terraform plan -no-color -input=false

      - name: Apply Terraform
        run: terraform apply -auto-approve
