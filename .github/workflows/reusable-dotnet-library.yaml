name: "[Reusable] Build and publish a .NET library to NuGet"
concurrency: ci-${{ inputs.service-path }}

on:
  workflow_call:
    inputs:
      service-path:
        required: true
        type: string
      execute-tests:
        default: true
        type: boolean

jobs:
  build-and-publish-services:
    name: Build and publish library (${{ inputs.service-path }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.service-path }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0

      - name: Setup .NET Coverage Tool
        run: dotnet tool install -g dotnet-coverage

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        if: ${{ inputs.execute-tests }}
        run: dotnet test --no-restore --verbosity normal -c Release --collect:"XPlat Code Coverage" --results-directory ./coverage

      - name: Merge coverage reports
        if: ${{ inputs.execute-tests }}
        run: dotnet-coverage merge *.cobertura.xml --recursive --output ./coverage/coverage.merged.xml --output-format cobertura

      - name: Verify code coverage is above 70%
        if: ${{ inputs.execute-tests }}
        shell: pwsh
        run: |
          [XML]$report = Get-Content coverage/coverage.merged.xml

          if ($report.coverage.'line-rate' -lt 0.7) {
            throw "Line coverage is less than 70 percent!"
          }

          if ($report.coverage.'branch-rate' -lt 0.7) {
            throw "Branch coverage is less than 70 percent!"
          }

      - name: Package library
        run: dotnet pack -c Release -o package --no-build

      - name: Publish to NuGet registry
        run: dotnet nuget push "**/package/**/*.nupkg" --api-key ${{ secrets.NUGET_APIKEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
