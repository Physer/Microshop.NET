name: Deploy required services
concurrency: deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-publish-gateway-service:
    name: Build and publish gateway service
    uses: ./.github/workflows/build-publish-service.yaml
    secrets:
      docker-username: ${{ secrets.DOCKER_USERNAME }}
      docker-password: ${{ secrets.DOCKER_PASSWORD }}
    with:
      service-name: gateway

  build-and-publish-indexing-service:
    name: Build and publish indexing service
    uses: ./.github/workflows/build-publish-service.yaml
    secrets:
      docker-username: ${{ secrets.DOCKER_USERNAME }}
      docker-password: ${{ secrets.DOCKER_PASSWORD }}
    with:
      service-name: indexing

  build-and-publish-products-service:
    name: Build and publish products service
    uses: ./.github/workflows/build-publish-service.yaml
    secrets:
      docker-username: ${{ secrets.DOCKER_USERNAME }}
      docker-password: ${{ secrets.DOCKER_PASSWORD }}
    with:
      service-name: products

  build-and-publish-pricing-service:
    name: Build and publish pricing service
    uses: ./.github/workflows/build-publish-service.yaml
    secrets:
      docker-username: ${{ secrets.DOCKER_USERNAME }}
      docker-password: ${{ secrets.DOCKER_PASSWORD }}
    with:
      service-name: pricing

  build-and-publish-authentication-service:
    name: Build and publish authentication service
    uses: ./.github/workflows/build-publish-authentication.yaml
    secrets:
      docker-username: ${{ secrets.DOCKER_USERNAME }}
      docker-password: ${{ secrets.DOCKER_PASSWORD }}

  deploy_terraform_resources:
    name: Deploy resources to Azure using Terraform
    needs:
      [
        build-and-publish-indexing-service,
        build-and-publish-products-service,
        build-and-publish-gateway-service,
        build-and-publish-pricing-service,
        build-and-publish-authentication-service,
      ]
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_environment: ${{ vars.ENVIRONMENT }}
      TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      TF_VAR_cloudflare_zone_id: ${{ secrets.CLOUDFLARE_ZONE_ID }}
    defaults:
      run:
        working-directory: infrastructure/terraform
    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialize Terraform
        run: terraform init -backend-config="config.azure.tfbackend"

      - name: Set Terraform workspace
        run: terraform workspace select -or-create production

      - name: Plan Terraform
        run: terraform plan -no-color -input=false

      - name: Apply Terraform
        run: terraform apply -auto-approve
