name: Provision resources (Template)
concurrency: provisioning

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      location:
        required: false
        type: string
        default: West Europe
    secrets:
      azureClientId:
        required: true
      azureClientSecret:
        required: true
      azureSubscriptionId:
        required: true
      azureTenantId:
        required: true
      meilisearchApiKey:
        required: true
      rabbitMqUsername:
        required: true
      rabbitMqPassword:
        required: true

jobs:
  provision_resources:
    defaults:
      run:
        working-directory: infrastructure/terraform
    name: Provision resources using Terraform
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      ARM_CLIENT_ID: ${{ secrets.azureClientId }}
      ARM_CLIENT_SECRET: ${{ secrets.azureClientSecret }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.azureSubscriptionId }}
      ARM_TENANT_ID: ${{ secrets.azureTenantId }}
      TF_VAR_environment: ${{ inputs.environment }}
      TF_VAR_location: ${{ inputs.location }}
      TF_VAR_vm_size: ${{ vars.TF_VAR_VM_SIZE }}
      TF_VAR_aks_sku_tier: ${{ VARS.TF_VAR_AKS_SKU_TIER }}
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init --backend-config=config.azure.tfbackend

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform workspace select
        id: workspace
        run: terraform workspace select -or-create ${{ inputs.environment }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -compact-warnings

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve

  prepare_aks_credentials:
    if: ${{ github.event.continuous_integration.conclusion == 'success' }} && ${{ github.event.test_provision_resources.conclusion == 'success' }} && ${{ github.event.production_provision_resources.conclusion == 'success' }}
    name: Prepare AKS deployment credentials
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: provision_resources
    steps:
      - uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.azureClientId }}","clientSecret":"${{ secrets.azureClientSecret }}","subscriptionId":"${{ secrets.azureSubscriptionId }}","tenantId":"${{ secrets.azureTenantId }}"}'

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: "rg-microshop-${{ inputs.environment }}"
          cluster-name: "aks-microshop-${{ inputs.environment }}"

  create_secrets_environment_file:
    name: Create .env.secret file for Kustomize
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure/kubernetes
    steps:
      - uses: actions/checkout@v3

      - run: |
          cat <<EOF > .env.secret
          meilisearch-api-key=${{ secrets.meilisearchApiKey }}
          rabbitmq-management-username=${{ secrets.rabbitMqUsername }}
          rabbitmq-management-password=${{ secrets.rabbitMqPassword }}
          EOF

  setup_kustomize:
    name: Set-up Kustomize
    environment: ${{ inputs.environment }}
    needs: [prepare_aks_credentials, create_secrets_environment_file]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: azure/k8s-bake@v2.4
        with:
          renderEngine: "kustomize"
          kustomizationPath: "./infrastructure/kubernetes"

  deploy_generic_resources:
    name: Deploy generic resources to the ${{ inputs.environment }} environment
    environment: ${{ inputs.environment }}
    needs: [setup_kustomize]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infrastructure/kubernetes
    steps:
      - uses: azure/k8s-deploy@v4
        with:
          manifests: |
            ./rabbitmq.yaml
            ./meilisearch.yaml
