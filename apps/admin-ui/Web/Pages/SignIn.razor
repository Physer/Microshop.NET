@page "/login"
@using Authentication.Models;
@using Web.Services;
@inject AuthenticationService authenticationService;

<div class="modal modal-sheet position-static d-block p-4 py-md-5" tabindex="-1" role="dialog" id="modalSignin">
    <div class="modal-dialog" role="document">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header p-5 pb-4 border-bottom-0">
                <h1 class="fw-bold mb-0 fs-2">Sign in</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body p-5 pt-0">
                <EditForm Model="@Model" OnSubmit="@SubmitAsync">
                    <div class="form-floating mb-3">
                        <InputText type="email" class="form-control rounded-3" id="usernameInput" placeholder="email@microshop.rocks" @bind-Value="Model!.Username" />
                        <label for="usernameInput">Email address</label>
                    </div>
                    <div class="form-floating mb-3">
                        <InputText type="password" class="form-control rounded-3" id="passwordInput" placeholder="password" @bind-Value="Model!.Password" />
                        <label for="passwordInput">Password</label>
                    </div>
                    <button class="w-100 mb-2 btn btn-lg rounded-3 btn-primary" type="submit">Sign in</button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    public SignInModel? Model { get; set; }

    protected override void OnInitialized() => Model ??= new();

    private async Task SubmitAsync()
    {
        if (string.IsNullOrWhiteSpace(Model?.Username) || string.IsNullOrWhiteSpace(Model?.Password))
            return;

        await authenticationService.SignInAsync(Model.Username, Model.Password);
    }

    public class SignInModel
    {
        public string? Username { get; set; }
        public string? Password { get; set; }
    }
}