---
services:
  # Managed services
  rabbitmq:
    container_name: rabbitmq
    image: masstransit/rabbitmq:latest
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${SERVICEBUS_MANAGEMENT_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${SERVICEBUS_MANAGEMENT_PASSWORD}
  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:latest
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_MASTER_KEY}
    restart: always
    ports:
      - 7700:7700

  # Authentication services
  authentication_database:
    container_name: authentication_database
    image: "postgres:latest"
    environment:
      - POSTGRES_USER=${AUTH_DB_USER}
      - POSTGRES_PASSWORD=${AUTH_DB_PASSWORD}
      - POSTGRES_DB=${AUTH_DB_NAME}
    ports:
      - 5432:5432
    restart: always

  authentication_core:
    container_name: authentication_core
    image: registry.supertokens.io/supertokens/supertokens-postgresql:6.0
    ports:
      - 3567:3567
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://${AUTH_DB_USER}:${AUTH_DB_PASSWORD}@host.docker.internal:5432/${AUTH_DB_NAME}"
    restart: always

  # Microshop.NET services
  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.dotnet
      args:
        - SERVICE_NAME=gateway
    environment:
      - Servicebus__BaseUrl=rabbitmq
      - Servicebus__ManagementUsername=${SERVICEBUS_MANAGEMENT_USERNAME}
      - Servicebus__ManagementPassword=${SERVICEBUS_MANAGEMENT_PASSWORD}
      - ReverseProxy__Clusters__authentication__Destinations__authentication__Address=http://authentication_service
      - Authentication__BaseUrl=http://authentication_service
      - Authentication__Issuer=http://localhost:5000/auth
    restart: always
    ports:
      - 5000:80
  products:
    container_name: products
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.dotnet
      args:
        - SERVICE_NAME=products
    environment:
      - Servicebus__BaseUrl=rabbitmq
      - Servicebus__ManagementUsername=${SERVICEBUS_MANAGEMENT_USERNAME}
      - Servicebus__ManagementPassword=${SERVICEBUS_MANAGEMENT_PASSWORD}
    restart: always
    ports:
      - 5001:80
  indexing:
    container_name: indexing
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.dotnet
      args:
        - SERVICE_NAME=indexing
    environment:
      - Servicebus__BaseUrl=rabbitmq
      - Servicebus__ManagementUsername=${SERVICEBUS_MANAGEMENT_USERNAME}
      - Servicebus__ManagementPassword=${SERVICEBUS_MANAGEMENT_PASSWORD}
      - Indexing__BaseUrl=http://meilisearch:7700/
      - Indexing__ApiKey=${MEILISEARCH_MASTER_KEY}
      - Indexing__IndexingIntervalInSeconds=3600
    restart: always
    ports:
      - 5003:80
  pricing:
    container_name: pricing
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.dotnet
      args:
        - SERVICE_NAME=pricing
    environment:
      - Servicebus__BaseUrl=rabbitmq
      - Servicebus__ManagementUsername=${SERVICEBUS_MANAGEMENT_USERNAME}
      - Servicebus__ManagementPassword=${SERVICEBUS_MANAGEMENT_PASSWORD}
    restart: always
    ports:
      - 5002:80
  authentication_service:
    container_name: authentication_service
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.authentication
    environment:
      - AUTHENTICATION_CORE_URL=http://host.docker.internal:3567
      - AUTHENTICATION_BACKEND_HOST=authentication_service
      - AUTHENTICATION_BACKEND_PORT=80
      - GATEWAY_URL=http://localhost:5000
      - WEBSITE_URL=http://localhost:3000
      - DASHBOARD_USER_EMAIL=${DASHBOARD_USER_EMAIL}
      - DASHBOARD_USER_PASSWORD=${DASHBOARD_USER_PASSWORD}
    restart: always
    ports:
      - 5004:80
