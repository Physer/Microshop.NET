---
services:
  # Managed services
  rabbitmq:
    container_name: rabbitmq
    image: masstransit/rabbitmq:latest
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=${SERVICEBUS_MANAGEMENT_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${SERVICEBUS_MANAGEMENT_PASSWORD}
  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:latest
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_MASTER_KEY}
    restart: always
    ports:
      - 7700:7700

  # Authentication services
  authentication_database:
    container_name: postgres_auth_db
    image: "postgres:latest"
    environment:
      POSTGRES_USER: supertokens_user
      POSTGRES_PASSWORD: somePassword
      POSTGRES_DB: supertokens
    ports:
      - 5432:5432
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "supertokens_user", "-d", "supertokens"]
      interval: 5s
      timeout: 5s
      retries: 5

  authentication_service:
    container_name: supertokens_auth_service
    image: registry.supertokens.io/supertokens/supertokens-postgresql:6.0
    depends_on:
      authentication_database:
        condition: service_healthy
    ports:
      - 3567:3567
    environment:
      POSTGRESQL_CONNECTION_URI: "postgresql://supertokens_user:somePassword@host.docker.internal:5432/supertokens"
    restart: always
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

  # Microshop.NET services
  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.backend
      args:
        - SERVICE_NAME=gateway
    environment:
      - Servicebus__BaseUrl=rabbitmq
      - Servicebus__ManagementUsername=${SERVICEBUS_MANAGEMENT_USERNAME}
      - Servicebus__ManagementPassword=${SERVICEBUS_MANAGEMENT_PASSWORD}
    restart: always
    ports:
      - 5000:80
  products:
    container_name: products
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.backend
      args:
        - SERVICE_NAME=products
    environment:
      - Servicebus__BaseUrl=rabbitmq
      - Servicebus__ManagementUsername=${SERVICEBUS_MANAGEMENT_USERNAME}
      - Servicebus__ManagementPassword=${SERVICEBUS_MANAGEMENT_PASSWORD}
    restart: always
    ports:
      - 5001:80
  indexing:
    container_name: indexing
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.backend
      args:
        - SERVICE_NAME=indexing
    environment:
      - Servicebus__BaseUrl=rabbitmq
      - Servicebus__ManagementUsername=${SERVICEBUS_MANAGEMENT_USERNAME}
      - Servicebus__ManagementPassword=${SERVICEBUS_MANAGEMENT_PASSWORD}
      - Indexing__BaseUrl=http://meilisearch:7700/
      - Indexing__ApiKey=${MEILISEARCH_MASTER_KEY}
      - Indexing__IndexingIntervalInSeconds=3600
    restart: always
    ports:
      - 5003:80
  pricing:
    container_name: pricing
    build:
      context: .
      dockerfile: infrastructure/Dockerfile.backend
      args:
        - SERVICE_NAME=pricing
    environment:
      - Servicebus__BaseUrl=rabbitmq
      - Servicebus__ManagementUsername=${SERVICEBUS_MANAGEMENT_USERNAME}
      - Servicebus__ManagementPassword=${SERVICEBUS_MANAGEMENT_PASSWORD}
    restart: always
    ports:
      - 5002:80
